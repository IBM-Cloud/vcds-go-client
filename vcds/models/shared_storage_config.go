// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharedStorageConfig A specified type of shared storage configuration.
// swagger:model shared_storage_config
type SharedStorageConfig struct {

	// IOPS tier. To see supported IOPS and size combinations, use the `GET /v2/shared_storage_tiers` API.
	// Required: true
	Iops *string `json:"iops"`

	// Number of storages of this type.
	// Required: true
	Quantity *int64 `json:"quantity"`

	// Size tier. To see supported IOPS and size combinations, use the `GET /v2/shared_storage_tiers` API.
	// Required: true
	Size *string `json:"size"`

	// Volume size of each storage in GB. For 10 IOPS/GB tier, the volume size can be in the range 20 - 4000. For other tiers, the volume size can be in the range 20 - 24000.
	// Required: true
	Volume *int64 `json:"volume"`
}

// Validate validates this shared storage config
func (m *SharedStorageConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIops(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVolume(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SharedStorageConfig) validateIops(formats strfmt.Registry) error {

	if err := validate.Required("iops", "body", m.Iops); err != nil {
		return err
	}

	return nil
}

func (m *SharedStorageConfig) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", m.Quantity); err != nil {
		return err
	}

	return nil
}

func (m *SharedStorageConfig) validateSize(formats strfmt.Registry) error {

	if err := validate.Required("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

func (m *SharedStorageConfig) validateVolume(formats strfmt.Registry) error {

	if err := validate.Required("volume", "body", m.Volume); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SharedStorageConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharedStorageConfig) UnmarshalBinary(b []byte) error {
	var res SharedStorageConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
