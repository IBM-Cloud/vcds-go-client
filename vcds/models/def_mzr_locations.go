// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DefMzrLocations The list of available Multi-Zone Region data center locations in JSON format. The key name is "mzr_locations".
// swagger:model def_mzr_locations
type DefMzrLocations struct {

	// The list of available Multi-Zone Region data center locations.
	// Required: true
	MzrLocations []*DefMzrLocationsMzrLocationsItems0 `json:"mzr_locations"`
}

// Validate validates this def mzr locations
func (m *DefMzrLocations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMzrLocations(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DefMzrLocations) validateMzrLocations(formats strfmt.Registry) error {

	if err := validate.Required("mzr_locations", "body", m.MzrLocations); err != nil {
		return err
	}

	for i := 0; i < len(m.MzrLocations); i++ {
		if swag.IsZero(m.MzrLocations[i]) { // not required
			continue
		}

		if m.MzrLocations[i] != nil {
			if err := m.MzrLocations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("mzr_locations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DefMzrLocations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefMzrLocations) UnmarshalBinary(b []byte) error {
	var res DefMzrLocations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DefMzrLocationsMzrLocationsItems0 The Multi-Zone Region data center location.
// swagger:model DefMzrLocationsMzrLocationsItems0
type DefMzrLocationsMzrLocationsItems0 struct {

	// The geography of the Multi-Zone Region data center.
	Geo string `json:"geo,omitempty"`

	// The Multi-Zone Region data center ID.
	ID string `json:"id,omitempty"`

	// The Multi-Zone Region location.
	Mzr string `json:"mzr,omitempty"`

	// The region of the Multi-Zone Region data center.
	Region string `json:"region,omitempty"`
}

// Validate validates this def mzr locations mzr locations items0
func (m *DefMzrLocationsMzrLocationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DefMzrLocationsMzrLocationsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefMzrLocationsMzrLocationsItems0) UnmarshalBinary(b []byte) error {
	var res DefMzrLocationsMzrLocationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
