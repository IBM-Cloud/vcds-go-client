// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DefLocations Available data center locations in JSON format. The key name is "locations".
// swagger:model def_locations
type DefLocations struct {

	// The list of available data center locations
	// Required: true
	Locations []*DefLocationsLocationsItems0 `json:"locations"`
}

// Validate validates this def locations
func (m *DefLocations) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLocations(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DefLocations) validateLocations(formats strfmt.Registry) error {

	if err := validate.Required("locations", "body", m.Locations); err != nil {
		return err
	}

	for i := 0; i < len(m.Locations); i++ {
		if swag.IsZero(m.Locations[i]) { // not required
			continue
		}

		if m.Locations[i] != nil {
			if err := m.Locations[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("locations" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DefLocations) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefLocations) UnmarshalBinary(b []byte) error {
	var res DefLocations
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DefLocationsLocationsItems0 A data center location.
// swagger:model DefLocationsLocationsItems0
type DefLocationsLocationsItems0 struct {

	// The geography of the data center.
	Geo string `json:"geo,omitempty"`

	// The data center ID
	ID string `json:"id,omitempty"`

	// The region of the data center.
	Region string `json:"region,omitempty"`
}

// Validate validates this def locations locations items0
func (m *DefLocationsLocationsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DefLocationsLocationsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefLocationsLocationsItems0) UnmarshalBinary(b []byte) error {
	var res DefLocationsLocationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
