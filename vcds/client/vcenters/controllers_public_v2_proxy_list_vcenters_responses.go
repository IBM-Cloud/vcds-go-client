// Code generated by go-swagger; DO NOT EDIT.

package vcenters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM-Cloud/vcds-go-client/vcds/models"
)

// ControllersPublicV2ProxyListVcentersReader is a Reader for the ControllersPublicV2ProxyListVcenters structure.
type ControllersPublicV2ProxyListVcentersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ControllersPublicV2ProxyListVcentersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewControllersPublicV2ProxyListVcentersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewControllersPublicV2ProxyListVcentersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewControllersPublicV2ProxyListVcentersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewControllersPublicV2ProxyListVcentersOK creates a ControllersPublicV2ProxyListVcentersOK with default headers values
func NewControllersPublicV2ProxyListVcentersOK() *ControllersPublicV2ProxyListVcentersOK {
	return &ControllersPublicV2ProxyListVcentersOK{}
}

/*ControllersPublicV2ProxyListVcentersOK handles this case with default header values.

Success.
*/
type ControllersPublicV2ProxyListVcentersOK struct {
	/*Global transaction ID for request correlation.
	 */
	XGlobalTransactionID string

	Payload *models.DefVcenters
}

func (o *ControllersPublicV2ProxyListVcentersOK) Error() string {
	return fmt.Sprintf("[GET /v2/vcenters][%d] controllersPublicV2ProxyListVcentersOK  %+v", 200, o.Payload)
}

func (o *ControllersPublicV2ProxyListVcentersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header x-global-transaction-id
	o.XGlobalTransactionID = response.GetHeader("x-global-transaction-id")

	o.Payload = new(models.DefVcenters)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewControllersPublicV2ProxyListVcentersUnauthorized creates a ControllersPublicV2ProxyListVcentersUnauthorized with default headers values
func NewControllersPublicV2ProxyListVcentersUnauthorized() *ControllersPublicV2ProxyListVcentersUnauthorized {
	return &ControllersPublicV2ProxyListVcentersUnauthorized{}
}

/*ControllersPublicV2ProxyListVcentersUnauthorized handles this case with default header values.

Unauthorized. The IAM token is invalid or expired. To retrieve your IAM token, run `ibmcloud login` and then `ibmcloud iam oauth-tokens`.
*/
type ControllersPublicV2ProxyListVcentersUnauthorized struct {
	/*Global transaction ID for request correlation.
	 */
	XGlobalTransactionID string

	Payload *models.Error
}

func (o *ControllersPublicV2ProxyListVcentersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/vcenters][%d] controllersPublicV2ProxyListVcentersUnauthorized  %+v", 401, o.Payload)
}

func (o *ControllersPublicV2ProxyListVcentersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header x-global-transaction-id
	o.XGlobalTransactionID = response.GetHeader("x-global-transaction-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewControllersPublicV2ProxyListVcentersInternalServerError creates a ControllersPublicV2ProxyListVcentersInternalServerError with default headers values
func NewControllersPublicV2ProxyListVcentersInternalServerError() *ControllersPublicV2ProxyListVcentersInternalServerError {
	return &ControllersPublicV2ProxyListVcentersInternalServerError{}
}

/*ControllersPublicV2ProxyListVcentersInternalServerError handles this case with default header values.

Internal server error. Your request cannot be processed. Please wait a few minutes and try again.
*/
type ControllersPublicV2ProxyListVcentersInternalServerError struct {
	/*Global transaction ID for request correlation.
	 */
	XGlobalTransactionID string

	Payload *models.Error
}

func (o *ControllersPublicV2ProxyListVcentersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v2/vcenters][%d] controllersPublicV2ProxyListVcentersInternalServerError  %+v", 500, o.Payload)
}

func (o *ControllersPublicV2ProxyListVcentersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header x-global-transaction-id
	o.XGlobalTransactionID = response.GetHeader("x-global-transaction-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
