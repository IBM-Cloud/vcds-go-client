// Code generated by go-swagger; DO NOT EDIT.

package users_and_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/IBM-Cloud/vcds-go-client/vcds/models"
)

// ControllersPublicV1ProxySetSlAccountKeyBssaccountReader is a Reader for the ControllersPublicV1ProxySetSlAccountKeyBssaccount structure.
type ControllersPublicV1ProxySetSlAccountKeyBssaccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ControllersPublicV1ProxySetSlAccountKeyBssaccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewControllersPublicV1ProxySetSlAccountKeyBssaccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewControllersPublicV1ProxySetSlAccountKeyBssaccountOK creates a ControllersPublicV1ProxySetSlAccountKeyBssaccountOK with default headers values
func NewControllersPublicV1ProxySetSlAccountKeyBssaccountOK() *ControllersPublicV1ProxySetSlAccountKeyBssaccountOK {
	return &ControllersPublicV1ProxySetSlAccountKeyBssaccountOK{}
}

/*ControllersPublicV1ProxySetSlAccountKeyBssaccountOK handles this case with default header values.

Success. The request has been successfully performed.
*/
type ControllersPublicV1ProxySetSlAccountKeyBssaccountOK struct {
	/*Global transaction ID for request correlation.
	 */
	XGlobalTransactionID string

	Payload *models.AccountInfraCredentials
}

func (o *ControllersPublicV1ProxySetSlAccountKeyBssaccountOK) Error() string {
	return fmt.Sprintf("[POST /v1/infra_credentials][%d] controllersPublicV1ProxySetSlAccountKeyBssaccountOK  %+v", 200, o.Payload)
}

func (o *ControllersPublicV1ProxySetSlAccountKeyBssaccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header x-global-transaction-id
	o.XGlobalTransactionID = response.GetHeader("x-global-transaction-id")

	o.Payload = new(models.AccountInfraCredentials)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest creates a ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest with default headers values
func NewControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest() *ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest {
	return &ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest{}
}

/*ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest handles this case with default header values.

Bad request. Check your request parameters.
*/
type ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest struct {
	/*Global transaction ID for request correlation.
	 */
	XGlobalTransactionID string

	Payload *models.Error
}

func (o *ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/infra_credentials][%d] controllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest  %+v", 400, o.Payload)
}

func (o *ControllersPublicV1ProxySetSlAccountKeyBssaccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header x-global-transaction-id
	o.XGlobalTransactionID = response.GetHeader("x-global-transaction-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
